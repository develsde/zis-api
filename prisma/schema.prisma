generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://userziswaf:Zis321@@@149.129.225.79:234/ziswafApp?connect_timeout=300"
}

model banners {
  banners_id         Int      @id @default(autoincrement())
  banners_name       String?  @db.VarChar(255)
  banners_path       String?  @db.Text
  banners_program_id Int?
  program            program?
}

model customers {
  customer_id       Int     @id @default(autoincrement())
  customer_user_id  Int
  customer_no_imkas String? @db.VarChar(15)
  customer_durasi   Int?
  customer_reminder Int?    @db.SmallInt
  customer_status   Int?    @default(1) @db.SmallInt
}

model institusi {
  institusi_id      Int       @id @default(autoincrement())
  institusi_nama    String    @db.VarChar(255)
  institusi_user_id Int?
  institusi_no_hp   String?   @db.VarChar(15)
  institusi_status  Int?      @default(1) @db.SmallInt
  user              user?     @relation(fields: [institusi_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "institusi_FK")
  program           program[]

  @@index([institusi_user_id], map: "institusi_FK")
}

model program {
  program_id                   Int                            @id @default(autoincrement())
  program_kode                 String?                        @db.VarChar(10)
  program_title                String                         @db.VarChar(100)
  program_short_desc           String?                        @db.Text
  program_start_date           DateTime?                      @db.DateTime(0)
  program_end_date             DateTime?                      @db.DateTime(0)
  program_description          String?                        @db.Text
  program_institusi_id         Int?
  program_target_amount        BigInt
  program_create               DateTime?                      @default(now()) @db.Timestamp(0)
  program_status               Int?                           @default(0) @db.SmallInt
  program_isheadline           Int?                           @default(0) @db.SmallInt
  program_banner_id            Int                            @unique
  user_id                      Int
  program_category_id          Int?
  beneficiary_id               Int?
  kat_penyaluran_id            Int?
  iswakaf                      Int?                           @default(0) @db.SmallInt
  program_wakaf_type           Int?                           @default(0)
  isinternal                   Int?                           @default(0) @db.SmallInt
  program_activity_biaya       Int?                           @default(0)
  activity_additional          activity_additional[]
  activity_paket               activity_paket[]
  activity_qurban              activity_qurban[]
  activity_user                activity_user[]
  budget                       budget[]
  mitra                        mitra[]
  mitra_register               mitra_register[]
  notification                 notification[]
  kategori_penyaluran          kategori_penyaluran?           @relation(fields: [kat_penyaluran_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "program_FK")
  beneficiary                  beneficiary?                   @relation(fields: [beneficiary_id], references: [id])
  program_banner               banners                        @relation(fields: [program_banner_id], references: [banners_id])
  program_category             program_category?              @relation(fields: [program_category_id], references: [id])
  program_institusi            institusi?                     @relation(fields: [program_institusi_id], references: [institusi_id])
  program_form_activity        program_form_activity[]
  program_registered_activity  program_registered_activity[]
  program_transaction_activity program_transaction_activity[]
  proposal                     proposal[]
  recurring_transaction        recurring_transaction[]
  transactions                 transactions[]
  waqif_register               waqif_register[]

  @@index([program_institusi_id], map: "program_program_institusi_id_fkey")
  @@index([beneficiary_id], map: "program_beneficiary_id_fkey")
  @@index([program_category_id], map: "program_program_category_id_fkey")
  @@index([user_id], map: "program_user_id_fkey")
  @@index([kat_penyaluran_id], map: "program_FK")
}

model program_category {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  desc       String?     @db.Text
  gl_id      Int?
  program    program[]
  gl_account gl_account? @relation(fields: [gl_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "program_category_gl_FK")

  @@index([gl_id], map: "program_category_gl_FK")
}

model user {
  user_id               Int                     @id @default(autoincrement())
  username              String                  @unique(map: "user_UN") @db.VarChar(255)
  user_password         String                  @db.VarChar(255)
  user_nama             String?                 @db.VarChar(100)
  user_phone            String?                 @unique(map: "user_UN_2") @db.VarChar(100)
  user_type             Int?                    @default(0)
  user_status           Int?                    @default(0) @db.SmallInt
  user_token            String?                 @db.Text
  user_reg_date         DateTime                @default(now()) @db.Timestamp(0)
  mustahiq_id           Int?                    @unique
  article               article[]
  beneficiary           beneficiary[]
  cso                   cso[]
  document_type         document_type[]
  ebs_validation        ebs_validation[]
  institusi             institusi[]
  mitra                 mitra[]
  mitra_approval        mitra_approval[]
  notification          notification[]
  pettycash             pettycash[]
  pettycash_request     pettycash_request[]
  proposal              proposal[]
  proposal_approval     proposal_approval[]
  recurring_transaction recurring_transaction[]
  transactions          transactions[]
  mustahiq              mustahiq?               @relation(fields: [mustahiq_id], references: [id], onUpdate: NoAction)
  type                  UserType?               @relation(fields: [user_type], references: [user_type_id], onUpdate: NoAction)
  waqif                 waqif[]

  @@index([user_type], map: "user_user_type_fkey")
}

model notification {
  id             Int           @id @default(autoincrement())
  title          String        @db.VarChar(255)
  description    String        @db.Text
  type           String        @db.VarChar(255)
  created_at     DateTime      @default(now()) @db.Timestamp(0)
  program_id     Int?
  transaction_id Int?
  user_id        Int
  program        program?      @relation(fields: [program_id], references: [program_id])
  transaction    transactions? @relation(fields: [transaction_id], references: [id])
  user           user          @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "notification_user_FK")

  @@index([program_id], map: "notification_program_id_fkey")
  @@index([transaction_id], map: "notification_transaction_id_fkey")
  @@index([user_id], map: "notification_user_FK")
}

model mustahiq {
  id                       Int     @id @default(autoincrement())
  address                  String  @db.Text
  province                 String? @db.VarChar(100)
  kota                     String? @db.VarChar(100)
  kecamatan                String? @db.VarChar(100)
  ktp_url                  String  @db.VarChar(255)
  kk_url                   String  @db.VarChar(255)
  emergency_contact_name   String  @db.VarChar(255)
  emergency_contact_number String  @db.VarChar(15)
  bank_name                String  @db.VarChar(255)
  bank_number              String  @db.VarChar(255)
  imkas_number             String? @db.VarChar(255)
  nama_imkas               String? @db.VarChar(255)
  bank_account_name        String  @db.VarChar(255)
  user                     user?
}

model beneficiary {
  id                       Int       @id @default(autoincrement())
  address                  String    @db.Text
  ktp_url                  String    @db.VarChar(255)
  kk_url                   String    @db.VarChar(255)
  emergency_contact_name   String    @db.VarChar(255)
  emergency_contact_number String    @db.VarChar(15)
  bank_name                String    @db.VarChar(255)
  bank_number              String    @db.VarChar(255)
  imkas_number             String?   @db.VarChar(255)
  bank_account_name        String    @db.VarChar(255)
  user_id                  Int?
  user                     user?     @relation(fields: [user_id], references: [user_id])
  program                  program[]

  @@index([user_id], map: "beneficiary_user_id_fkey")
}

model password_token {
  id      Int    @id @default(autoincrement())
  user_id Int    @unique
  token   String @db.VarChar(255)
}

model UserType {
  user_type_id   Int    @id @default(autoincrement())
  user_type_name String @db.VarChar(100)
  user_platform  Int?   @default(0) @db.SmallInt
  user           user[]

  @@map("user_type")
}

model vendor {
  vendor_id            Int     @id @default(autoincrement())
  vendor_user_id       Int
  vendor_address       String? @db.Text
  vendor_ktp           String? @db.VarChar(255)
  vendor_kk            String? @db.VarChar(255)
  vendor_kontak_name   String? @db.VarChar(255)
  vendor_kontak_number String? @db.VarChar(15)
  vendor_bank_name     String? @db.VarChar(255)
  vendor_bank_number   Int?
  vendor_bank_id       Int?
}

model test_table {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model transactions {
  id               Int            @id @default(autoincrement())
  program_id       Int
  user_id          Int
  amount           Int            @db.MediumInt
  payment_method   String         @db.VarChar(100)
  evidence         String         @db.Text
  status           String         @default("pending") @db.VarChar(100)
  isrecurring      Int?           @default(0) @db.SmallInt
  recurring_value  Int?
  recurring_satuan Int?
  is_nologin       Int?           @default(0) @db.SmallInt
  nama_muzaki      String?        @db.VarChar(255)
  email_muzaki     String?        @db.VarChar(255)
  phone_muzaki     String?        @db.VarChar(16)
  trans_date       DateTime?      @default(now()) @db.Timestamp(0)
  notification     notification[]
  program          program        @relation(fields: [program_id], references: [program_id])
  user             user           @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_user_FK")

  @@index([program_id], map: "transactions_program_id_fkey")
  @@index([user_id], map: "transactions_user_FK")
}

model bank_account {
  id          Int           @id @default(autoincrement())
  bank_name   String        @db.VarChar(255)
  bank_number String        @db.VarChar(255)
  isbank      Int?          @default(1) @db.SmallInt
  mt_file     mt_file[]
  mutasi_file mutasi_file[]
}

model ebs_staging {
  id                 Int              @id @default(autoincrement())
  account_number     String?          @db.VarChar(50)
  trans_ref          String?          @db.VarChar(50)
  bank_date          DateTime?        @db.DateTime(0)
  state_num          String?          @db.VarChar(25)
  currency           String?          @db.VarChar(3)
  ob_amount          String?          @db.VarChar(200)
  ob_ind             String?          @db.VarChar(50)
  eb_amount          String?          @db.VarChar(200)
  eb_ind             String?          @db.VarChar(50)
  trans_date         DateTime?        @db.DateTime(0)
  trans_type         String?          @db.VarChar(27)
  trans_amount       String?          @db.VarChar(27)
  trans_id           String?          @db.VarChar(27)
  text_info          String?          @db.VarChar(200)
  ebs_info1          String?          @db.VarChar(50)
  ebs_info2          String?          @db.VarChar(50)
  ebs_info3          String?          @db.VarChar(50)
  ebs_filename       String?          @db.VarChar(255)
  mt_file_id         Int?
  identified         Int?             @default(0) @db.SmallInt
  identified_user_id Int?
  identified_date    DateTime?        @db.DateTime(0)
  mt_file            mt_file?         @relation(fields: [mt_file_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ebs_staging_FK")
  ebs_validation     ebs_validation[]

  @@index([account_number], map: "ebs_staging_account_number_fkey")
  @@index([mt_file_id], map: "ebs_staging_FK")
}

model tccode {
  id     Int      @id @default(autoincrement())
  ccode  String   @unique
  cname  String
  cncode String
  athead athead[]
}

model athead {
  id     Int     @id @default(autoincrement())
  ccode  String
  fyear  String
  docnr  String
  atgla  atgla[]
  tccode tccode  @relation(fields: [ccode], references: [ccode])

  @@unique([ccode, fyear, docnr])
}

model atgla {
  id     Int    @id @default(autoincrement())
  ccode  String
  fyear  String
  docnr  String
  clrdt  String
  docit  String
  posdt  String
  docdt  String
  dtype  String
  athead athead @relation(fields: [ccode, fyear, docnr], references: [ccode, fyear, docnr])

  @@index([ccode, fyear, docnr], map: "atgla_ccode_fyear_docnr_fkey")
}

model recurring_transaction {
  id               Int      @id @default(autoincrement())
  program_id       Int?
  user_id          Int?
  amount           Int?
  payment_method   String?  @db.VarChar(100)
  recurring_status Int?     @default(0) @db.SmallInt
  recurring_type   Int?     @default(0) @db.SmallInt
  reminder_type    Int?     @default(0) @db.SmallInt
  program          program? @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "recurring_transaction_program_id_FK")
  user             user?    @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: "recurring_transaction_user_id_FK")

  @@index([program_id], map: "recurring_transaction_program_id_FK")
  @@index([user_id], map: "recurring_transaction_user_id_FK")
}

model document_type {
  id               Int                @id @default(autoincrement())
  indicator        String?
  account_type     String?
  user_id          Int
  created_at       DateTime           @default(now()) @db.Timestamp(0)
  description1     String?
  description2     String?
  description3     String?
  posting_key      String?
  document_number  document_number[]
  user             user               @relation(fields: [user_id], references: [user_id])
  jurnal_lk_header jurnal_lk_header[]

  @@index([user_id], map: "document_type_user_id_fkey")
}

model gl_account {
  id                Int                 @id @default(autoincrement())
  gl_account        String?
  gl_name           String?
  gl_type           Int?
  gl_group          String?
  description       String?
  coa               String?
  status            String?
  bank_account      Int?
  doc_number        Int?
  asnaf_type_id     Int?
  parent_id         Int?                @default(0) @db.SmallInt
  coa_code          String?             @db.VarChar(50)
  ebs_validation    ebs_validation[]
  document_number   document_number?    @relation(fields: [doc_number], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gl_account_FK_1")
  gl_account_type   gl_account_type?    @relation(fields: [gl_type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gl_account_type_FK")
  jurnal            jurnal[]
  jurnal_lk         jurnal_lk[]
  jurnal_petty_cash jurnal_petty_cash[]
  posting           posting[]
  program_category  program_category[]
  report            report[]

  @@index([gl_type], map: "gl_account_type_FK")
  @@index([bank_account], map: "gl_account_FK")
  @@index([doc_number], map: "gl_account_FK_1")
}

model gl_account_type {
  id         Int          @id @default(autoincrement())
  gla_type   String?      @db.VarChar(100)
  gl_account gl_account[]
}

model pettycash {
  id         Int       @id @default(autoincrement())
  amount     Int?      @default(0)
  updatetime DateTime? @db.DateTime(0)
  user_id    Int
  evidence   String?   @db.Text
  user       user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "pettycash_FK")

  @@index([user_id], map: "pettycash_FK")
}

model pettycash_request {
  id                Int                 @id @default(autoincrement())
  amount            Int?                @default(0)
  user_id           Int
  request_date      DateTime?           @default(now()) @db.Timestamp(0)
  status            Int?                @default(0) @db.SmallInt
  deskripsi         String?             @db.Text
  evidence          String?             @db.Text
  jurnal            jurnal[]
  jurnal_petty_cash jurnal_petty_cash[]
  user              user                @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "pettycash_request_FK")

  @@index([user_id], map: "pettycash_request_FK")
}

model provinces {
  prov_id         Int      @id @default(autoincrement())
  prov_name       String?  @db.VarChar(255)
  locationid      Int?
  status          Int?     @default(1)
  province_by_dpt Int?     @default(0)
  cities          cities[]
  cso             cso[]
  mitra           mitra[]
  waqif           waqif[]
}

model cities {
  city_id   Int         @id @default(autoincrement())
  city_name String?     @db.VarChar(255)
  prov_id   Int?
  provinces provinces?  @relation(fields: [prov_id], references: [prov_id], onDelete: NoAction, onUpdate: NoAction, map: "cities_FK")
  cso       cso[]
  districts districts[]
  mitra     mitra[]
  waqif     waqif[]

  @@index([prov_id], map: "cities_FK")
}

model districts {
  dis_id   Int     @id @default(autoincrement())
  dis_name String? @db.VarChar(255)
  city_id  Int?
  ket      String? @db.VarChar(100)
  cso      cso[]
  cities   cities? @relation(fields: [city_id], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "districts_FK")

  @@index([city_id], map: "districts_FK")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model proposal {
  id                          Int                  @id @default(autoincrement())
  user_id                     Int?
  program_id                  Int?
  nama                        String?              @db.VarChar(100)
  tempat_lahir                String?              @db.VarChar(100)
  tgl_lahir                   String?              @db.VarChar(15)
  jenis_kelamin               Int?                 @default(0) @db.SmallInt
  alamat_rumah                String?              @db.VarChar(255)
  kode_pos                    String?              @db.VarChar(6)
  status_rumah                Int?                 @default(0) @db.SmallInt
  status_pernikahan           Int?                 @default(0) @db.SmallInt
  jumlah_anak                 Int?                 @default(0) @db.SmallInt
  penghasilan_bulanan         Int?
  nama_pasangan               String?              @db.VarChar(100)
  pekerjaan                   String?              @db.VarChar(100)
  pendidikan_terakhir         Int?                 @default(0) @db.SmallInt
  nama_sekolah_universitas    String?              @db.VarChar(100)
  fakultas                    String?              @db.VarChar(100)
  jurusan                     String?              @db.VarChar(100)
  tempat_mengajar             String?              @db.VarChar(255)
  alamat_mengajar             String?              @db.VarChar(255)
  nomor_telp_sekolah_kampus   String?              @db.VarChar(15)
  sebagai_guru                String?              @db.VarChar(100)
  bantuan_pihak_lain          String?              @db.VarChar(255)
  nominal_bantuan             Int?
  nama_pemberi_rekomendasi    String?              @db.VarChar(100)
  email_pemberi_rekomendasi   String?              @db.VarChar(255)
  alamat_pemberi_rekomendasi  String?              @db.VarChar(255)
  no_telp_pemberi_rekomendasi String?              @db.VarChar(15)
  proposal_kategori           Int?                 @default(0) @db.SmallInt
  status_domisili             Int?                 @default(0) @db.SmallInt
  kelas_semester_saat_ini     String?              @db.VarChar(100)
  alamat_sekolah_kampus       String?              @db.VarChar(100)
  biaya_pendidikan_bulanan    Int?
  organisasi_yang_diikuti     String?              @db.VarChar(255)
  nama_ayah                   String?              @db.VarChar(100)
  pekerjaan_ayah              String?              @db.VarChar(100)
  penghasilan_bulanan_ayah    Int?
  nama_ibu                    String?              @db.VarChar(100)
  pekerjaan_ibu               String?              @db.VarChar(100)
  penghasilan_bulanan_ibu     Int?
  biaya_hidup_bulanan         Int?
  jumlah_tanggungan           Int?                 @default(0) @db.SmallInt
  jenis_bantuan_kesehatan     String?              @default("0") @db.VarChar(255)
  create_date                 DateTime?            @default(now()) @db.Timestamp(0)
  status_approval             Int?                 @default(0) @db.SmallInt
  tanggal_approval            DateTime?            @db.DateTime(0)
  user_approver_id            Int?
  status_approval2            Int?                 @default(0) @db.SmallInt
  tanggal_approval2           DateTime?            @db.DateTime(0)
  status_perintah_bayar       Int?                 @default(0) @db.SmallInt
  status_approval3            Int?                 @default(0) @db.SmallInt
  tanggal_approval3           DateTime?            @db.DateTime(0)
  user_approver_id3           Int?
  status_bayar                Int?                 @default(0) @db.SmallInt
  dana_yang_diajukan          Int?                 @default(0)
  user_approver_id2           Int?
  status_all                  Int?                 @default(0) @db.SmallInt
  dana_yang_disetujui         Int?
  approved                    Int?                 @default(0) @db.SmallInt
  dana_approval               Int?
  kategori_penyaluran_id      Int?
  all_notes                   String?              @db.Text
  lampiran1                   String?              @db.Text
  lampiran2                   String?              @db.Text
  lampiran3                   String?              @db.Text
  lampiran4                   String?              @db.Text
  lampiran5                   String?              @db.Text
  lampiran6                   String?              @db.Text
  lampiran7                   String?              @db.Text
  nik_mustahiq                String?              @db.VarChar(20)
  no_proposal                 String?              @db.VarChar(100)
  ispaid                      Int?                 @default(0) @db.SmallInt
  tgl                         DateTime?            @db.Timestamp(0)
  referentor                  String?              @db.VarChar(100)
  no_hp_referentor            String?              @db.VarChar(15)
  nama_akun                   String?              @db.VarChar(255)
  approver_count              Int?                 @default(0) @db.SmallInt
  nomor_imkas                 String?              @db.VarChar(50)
  nama_imkas                  String?              @db.VarChar(255)
  nama_bank                   String?              @db.VarChar(255)
  nama_rekening               String?              @db.VarChar(255)
  nomor_rekening              String?              @db.VarChar(50)
  tgl_bayar                   DateTime?            @db.DateTime(0)
  disbursement                disbursement[]
  jurnal                      jurnal[]
  user                        user?                @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: "proposal_FK")
  program                     program?             @relation(fields: [program_id], references: [program_id], onUpdate: SetNull, map: "proposal_FK_1")
  kategori_penyaluran         kategori_penyaluran? @relation(fields: [kategori_penyaluran_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "proposal_FK_2")
  proposal_approval           proposal_approval[]

  @@index([user_id], map: "proposal_FK")
  @@index([program_id], map: "proposal_FK_1")
  @@index([kategori_penyaluran_id], map: "proposal_FK_2")
}

model mt_file {
  id                      Int                       @id @default(autoincrement())
  filename                String?                   @db.VarChar(255)
  path                    String?                   @db.Text
  date                    DateTime?                 @default(now()) @db.Timestamp(0)
  bank                    Int?
  no_rekening             String?                   @db.VarChar(25)
  user_id                 Int?
  ebs_staging             ebs_staging[]
  imkas_payment_statement imkas_payment_statement[]
  bank_account            bank_account?             @relation(fields: [bank], references: [id], onUpdate: SetNull, map: "mt_file_FK")

  @@index([bank], map: "mt_file_FK")
}

model proposal_approval {
  id          Int       @id @default(autoincrement())
  proposal_id Int?
  user_id     Int?
  date        DateTime? @default(now()) @db.Timestamp(0)
  status      Int?      @default(0) @db.SmallInt
  flag        Int?      @default(0) @db.SmallInt
  amount      Int?
  proposal    proposal? @relation(fields: [proposal_id], references: [id], onDelete: Cascade, map: "proposal_approval_FK")
  user        user?     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@index([proposal_id], map: "proposal_approval_FK")
  @@index([user_id], map: "proposal_approval_user_id_fkey")
}

model ebs_validation {
  id             Int          @id @default(autoincrement())
  ebs_id         Int?
  gl_id          Int?
  user_id        Int?
  tgl_validation DateTime?    @default(now()) @db.Timestamp(0)
  gl_account     gl_account?  @relation(fields: [gl_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ebs_validation_FK")
  user           user?        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "ebs_validation_FK_1")
  ebs_staging    ebs_staging? @relation(fields: [ebs_id], references: [id], onUpdate: SetNull, map: "ebs_validation_FK_2")

  @@index([gl_id], map: "ebs_validation_FK")
  @@index([user_id], map: "ebs_validation_FK_1")
  @@index([ebs_id], map: "ebs_validation_FK_2")
}

model jurnal {
  id                        Int                @id @default(autoincrement())
  datetime                  DateTime?          @default(now()) @db.Timestamp(0)
  glaccount                 Int?
  jurnal_category_id        Int?
  deskripsi                 String?            @db.Text
  iscredit                  Int?               @default(0) @db.SmallInt
  isdebit                   Int?               @default(0) @db.SmallInt
  transaction_proposal_id   Int?
  transaction_petty_cash_id Int?
  transaction_muzaki_id     Int?
  transaction_mustahiq_id   Int?
  transaction_program_id    Int?               @default(0)
  amount_credit             Int?
  amount_debit              Int?
  gl_account                gl_account?        @relation(fields: [glaccount], references: [id], onUpdate: SetNull, map: "jurnal_FK")
  proposal                  proposal?          @relation(fields: [transaction_proposal_id], references: [id], onUpdate: SetNull, map: "jurnal_FK_1")
  pettycash_request         pettycash_request? @relation(fields: [transaction_petty_cash_id], references: [id], onUpdate: SetNull, map: "jurnal_FK_2")
  jurnal_category           jurnal_category?   @relation(fields: [jurnal_category_id], references: [id], onUpdate: SetNull, map: "jurnal_FK_3")

  @@index([glaccount], map: "jurnal_FK")
  @@index([transaction_proposal_id], map: "jurnal_FK_1")
  @@index([transaction_petty_cash_id], map: "jurnal_FK_2")
  @@index([jurnal_category_id], map: "jurnal_FK_3")
}

model jurnal_category {
  id                Int                 @id @default(autoincrement())
  category          String?             @db.Text
  jurnal            jurnal[]
  jurnal_lk         jurnal_lk[]
  jurnal_petty_cash jurnal_petty_cash[]
}

model budget {
  id            Int       @id @default(autoincrement())
  program_id    Int?
  amount        Int?
  datetime      DateTime? @default(now()) @db.Timestamp(0)
  bulan         Int?
  tahun         String?   @db.VarChar(5)
  tahun_laporan String?   @db.VarChar(5)
  program       program?  @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "budget_FK")

  @@index([program_id], map: "budget_FK")
}

model article {
  id       Int       @id @default(autoincrement())
  title    String?   @db.VarChar(255)
  content  String?   @db.LongText
  banner   String?   @db.Text
  user_id  Int?
  datetime DateTime? @default(now()) @db.Timestamp(0)
  user     user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "article_FK")

  @@index([user_id], map: "article_FK")
}

model jurnal_petty_cash {
  id                        Int                @id @default(autoincrement())
  datetime                  DateTime?          @default(now()) @db.Timestamp(0)
  glaccount                 Int?
  jurnal_category_id        Int?
  deskripsi                 String?            @db.Text
  iscredit                  Int?               @default(0) @db.SmallInt
  isdebit                   Int?               @default(0) @db.SmallInt
  transaction_petty_cash_id Int?
  amount_credit             Int?
  amount_debit              Int?
  pettycash_request         pettycash_request? @relation(fields: [transaction_petty_cash_id], references: [id], onUpdate: SetNull, map: "jurnal_FK_2_copy")
  jurnal_category           jurnal_category?   @relation(fields: [jurnal_category_id], references: [id], onUpdate: SetNull, map: "jurnal_FK_3_copy")
  gl_account                gl_account?        @relation(fields: [glaccount], references: [id], onUpdate: SetNull, map: "jurnal_FK_copy")

  @@index([glaccount], map: "jurnal_FK")
  @@index([transaction_petty_cash_id], map: "jurnal_FK_2")
  @@index([jurnal_category_id], map: "jurnal_FK_3")
}

model asnaf_type {
  id                  Int                   @id @default(autoincrement())
  type                String?               @db.VarChar(100)
  deskripsi           String?               @db.VarChar(100)
  kategori_penyaluran kategori_penyaluran[]
}

model kategori_penyaluran {
  id            Int         @id @default(autoincrement())
  asnaf_type_id Int?
  kategori_nama String?     @db.VarChar(255)
  asnaf_type    asnaf_type? @relation(fields: [asnaf_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kategori_penyaluran_FK")
  program       program[]
  proposal      proposal[]

  @@index([asnaf_type_id], map: "kategori_penyaluran_FK")
}

model document_number {
  id            Int            @id @default(autoincrement())
  type_id       Int?
  number        Int?
  deskripsi     String?        @db.VarChar(255)
  document_type document_type? @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "document_number_FK")
  gl_account    gl_account[]

  @@index([type_id], map: "document_number_FK")
}

model mutation_data_migrasi {
  id               Int       @id @default(autoincrement())
  tgl_mutasi       DateTime? @db.Date
  nama             String?   @db.VarChar(100)
  alamat           String?   @db.Text
  kota             String?   @db.VarChar(100)
  province         String?   @db.VarChar(100)
  no_imkas         String?   @db.VarChar(15)
  referentor       String?   @db.VarChar(100)
  program          String?   @db.VarChar(100)
  total_dana       Int?
  ccoa             String?   @db.VarChar(100)
  gl_account_id    Int?
  gl_account       String?   @db.VarChar(100)
  program_kategori String?   @db.VarChar(30)
  asnaf_type       String?   @db.VarChar(100)
  deskripsi        String?   @db.Text
}

model mutation_data_migrasi2 {
  id               Int       @id @default(autoincrement())
  tgl_mutasi       DateTime? @db.Date
  nama             String?   @db.VarChar(200)
  alamat           String?   @db.Text
  kota             String?   @db.VarChar(100)
  province         String?   @db.VarChar(100)
  no_imkas         String?   @db.VarChar(20)
  referentor       String?   @db.VarChar(100)
  program          String?   @db.VarChar(100)
  total_dana       BigInt?
  ccoa             String?   @db.VarChar(100)
  gl_account_id    Int?
  gl_account       String?   @db.VarChar(100)
  program_kategori String?   @db.VarChar(30)
  asnaf_type       String?   @db.VarChar(100)
  deskripsi        String?   @db.Text
}

model mutation_data_migrasi3 {
  id                Int       @id @default(autoincrement())
  tgl_mutasi        DateTime? @db.Date
  nama              String?   @db.VarChar(200)
  alamat            String?   @db.Text
  kota              String?   @db.VarChar(100)
  province          String?   @db.VarChar(100)
  no_imkas          String?   @db.VarChar(20)
  referentor        String?   @db.VarChar(100)
  program           String?   @db.VarChar(100)
  total_dana_debit  Float?
  total_dana_credit Float?
  ccoa              String?   @db.VarChar(100)
  gl_account_id     Int?
  gl_account        String?   @db.VarChar(100)
  program_kategori  String?   @db.VarChar(30)
  asnaf_type        String?   @db.VarChar(100)
  deskripsi         String?   @db.Text
  program_category  String?   @db.VarChar(50)
}

model trans_imkas {
  id            Int     @id @default(autoincrement())
  nama          String? @db.VarChar(255)
  nominal       Int?
  keterangan    String? @db.Text
  norekening    String? @db.VarChar(30)
  iskyc         String? @db.VarChar(5)
  isregistered  Int?    @default(0) @db.SmallInt
  saldo_kemarin Int?    @default(0)
  saldo_setelah Int?
  status_inject Int?    @default(0) @db.SmallInt
}

model imkas_payment_statement {
  id          Int      @id @default(autoincrement())
  create_date DateTime @default(now()) @db.Timestamp(0)
  file_id     Int
  nama        String?  @db.VarChar(255)
  no_imkas    String?  @db.VarChar(20)
  nominal     Int?
  rekening    String?  @db.VarChar(20)
  nama_imkas  String?  @db.VarChar(100)
  keterangan  String?  @db.Text
  saldo_awal  Int?
  saldo_akhir Int?
  status      Int?     @db.SmallInt
  mt_file     mt_file  @relation(fields: [file_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "imkas_payment_statement_mt_file_FK")

  @@index([file_id], map: "imkas_payment_statement_mt_file_FK")
}

model countries {
  id      Int    @id
  alpha_2 String @default("") @db.Char(2)
  alpha_3 String @default("") @db.Char(3)
  ar      String @default("") @db.VarChar(75)
  bg      String @default("") @db.VarChar(75)
  cs      String @default("") @db.VarChar(75)
  da      String @default("") @db.VarChar(75)
  de      String @default("") @db.VarChar(75)
  el      String @default("") @db.VarChar(75)
  en      String @default("") @db.VarChar(75)
  eo      String @default("") @db.VarChar(75)
  es      String @default("") @db.VarChar(75)
  et      String @default("") @db.VarChar(75)
  eu      String @default("") @db.VarChar(75)
  fa      String @default("") @db.VarChar(75)
  fi      String @default("") @db.VarChar(75)
  fr      String @default("") @db.VarChar(75)
  hr      String @default("") @db.VarChar(75)
  hu      String @default("") @db.VarChar(75)
  hy      String @default("") @db.VarChar(75)
  it      String @default("") @db.VarChar(75)
  ja      String @default("") @db.VarChar(75)
  ko      String @default("") @db.VarChar(75)
  lt      String @default("") @db.VarChar(75)
  nl      String @default("") @db.VarChar(75)
  no      String @default("") @db.VarChar(75)
  pl      String @default("") @db.VarChar(75)
  pt      String @default("") @db.VarChar(75)
  ro      String @default("") @db.VarChar(75)
  ru      String @default("") @db.VarChar(75)
  sk      String @default("") @db.VarChar(75)
  sl      String @default("") @db.VarChar(75)
  sr      String @default("") @db.VarChar(75)
  sv      String @default("") @db.VarChar(75)
  th      String @default("") @db.VarChar(75)
  uk      String @default("") @db.VarChar(75)
  zh      String @default("") @db.VarChar(75)
  zh_tw   String @default("") @map("zh-tw") @db.VarChar(75)
}

model wakaf_type {
  wt_id   Int     @id @default(autoincrement())
  wt_name String? @db.VarChar(100)
}

model waqif {
  id               Int              @id @default(autoincrement())
  user_id          Int?
  waqif_name       String?          @db.VarChar(255)
  waqif_whatsapp   String?          @db.VarChar(15)
  waqif_email      String?          @db.VarChar(255)
  waqif_nik        String?          @db.VarChar(16)
  waqif_gender     Int?             @default(0) @db.SmallInt
  waqif_birthplace String?          @db.VarChar(100)
  waqif_birthdate  DateTime?        @db.Date
  waqif_iswna      Int?             @default(0) @db.SmallInt
  waqif_country    Int?             @default(0)
  waqif_prov_id    Int?
  waqif_city_id    Int?
  waqif_agama      Int?             @default(0)
  waqif_pekerjaan  String?          @db.VarChar(255)
  waqif_regdate    DateTime?        @default(now()) @db.Timestamp(0)
  waqif_status     Int?             @default(1) @db.SmallInt
  cities           cities?          @relation(fields: [waqif_city_id], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "waqif_cities_FK")
  provinces        provinces?       @relation(fields: [waqif_prov_id], references: [prov_id], onDelete: NoAction, onUpdate: NoAction, map: "waqif_provinces_FK")
  user             user?            @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "waqif_user_FK")
  waqif_register   waqif_register[]

  @@index([waqif_city_id], map: "waqif_cities_FK")
  @@index([waqif_prov_id], map: "waqif_provinces_FK")
  @@index([user_id], map: "waqif_user_FK")
}

model waqif_register {
  id                       Int                 @id @default(autoincrement())
  waqif_id                 Int?
  waqif_reg_type           Int
  waqif_reg_program_id     Int?
  waqif_reg_nominal        Int?                @default(0)
  waqif_reg_jangkawaktu    Int?
  waqif_reg_isrecurring    Int?                @default(0) @db.SmallInt
  waqif_reg_payment_method Int?
  waqif_reg_doa            String?             @db.Text
  waqif_reg_ishide         Int?                @default(0) @db.SmallInt
  waqif_reg_regdate        DateTime?           @default(now()) @db.Timestamp(0)
  waqif_reg_file_asuransi  String?             @db.Text
  program                  program?            @relation(fields: [waqif_reg_program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "waqif_register_program_FK")
  waqif                    waqif?              @relation(fields: [waqif_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "waqif_register_waqif_FK")
  waqif_transaction        waqif_transaction[]

  @@index([waqif_id], map: "waqif_register_waqif_FK")
  @@index([waqif_reg_program_id], map: "waqif_register_program_FK")
}

model waqif_transaction {
  id                    Int             @id @default(autoincrement())
  waqif_reg_id          Int?
  waqif_trans_datetime  DateTime?       @default(now()) @db.Timestamp(0)
  waqif_trans_nominal   Int?
  waqif_trans_status    Int?            @default(0) @db.SmallInt
  waqif_trans_va_tujuan String?         @db.VarChar(100)
  waqif_trans_bank      Int?
  waqif_register        waqif_register? @relation(fields: [waqif_reg_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "waqif_transaction_waqif_register_FK")

  @@index([waqif_reg_id], map: "waqif_transaction_waqif_register_FK")
}

model bank {
  id        Int     @id @default(autoincrement())
  bank_name String? @db.VarChar(100)
  bank_code String? @db.VarChar(50)
  isactive  Int?    @default(1)
}

model mitra {
  id                         Int                    @id @default(autoincrement())
  mitra_nama                 String?                @db.VarChar(255)
  mitra_phone                String?                @db.VarChar(16)
  mitra_email                String?                @db.VarChar(255)
  mitra_nama_pendiri         String?                @db.VarChar(255)
  mitra_badan_usaha_category Int?                   @default(0) @db.SmallInt
  mitra_nik                  String?                @db.VarChar(16)
  mitra_npwp                 String?                @db.VarChar(25)
  mitra_siup_no              String?                @db.VarChar(100)
  mitra_siup_date            DateTime?              @db.Date
  mitra_alamat               String?                @db.Text
  mitra_city_id              Int?
  mitra_prov_id              Int?
  mitra_kodepos              String?                @db.VarChar(10)
  mitra_user_id              Int?
  approved                   Int?                   @default(0) @db.SmallInt
  dana_approval              Int?                   @default(0)
  status_bayar               Int?                   @default(0)
  dana_final_disetujui       Int?
  status_request_penarikan   Int?                   @default(0) @db.SmallInt
  mitra_bank                 String?                @db.VarChar(15)
  mitra_no_rekening          String?                @db.VarChar(16)
  mitra_nama_rekening        String?                @db.VarChar(100)
  mitra_status               Int?                   @default(1) @db.SmallInt
  mitra_no_kontrak           String?                @db.VarChar(55)
  mitra_program_id           Int?
  created_date               DateTime?              @default(now()) @db.Timestamp(0)
  all_notes                  String?                @db.Text
  cities                     cities?                @relation(fields: [mitra_city_id], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_cities_FK")
  program                    program?               @relation(fields: [mitra_program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_program_FK")
  provinces                  provinces?             @relation(fields: [mitra_prov_id], references: [prov_id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_provinces_FK")
  user                       user?                  @relation(fields: [mitra_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_user_FK")
  mitra_approval             mitra_approval[]
  mitra_penarikan_dana       mitra_penarikan_dana[]
  mitra_register             mitra_register[]

  @@index([mitra_city_id], map: "mitra_cities_FK")
  @@index([mitra_prov_id], map: "mitra_provinces_FK")
  @@index([mitra_user_id], map: "mitra_user_FK")
  @@index([mitra_program_id], map: "mitra_program_FK")
}

model mitra_register {
  id                        Int         @id @default(autoincrement())
  mitra_id                  Int?
  mitra_reg_wakaf_category  Int?
  mitra_reg_referentor      Int?
  mitra_reg_nama_wakaf      String?     @db.VarChar(255)
  mitra_reg_alamat_wakaf    String?     @db.Text
  mitra_reg_deskripsi_wakaf String?     @db.Text
  mitra_reg_nominal         Int?
  mitra_reg_durasi_value    Int?
  mitra_reg_durasi_satuan   Int?        @db.SmallInt
  mitra_reg_file            String?     @db.Text
  mitra_reg_program_id      Int?
  mitra_reg_date_start      DateTime?   @db.Date
  mitra_reg_date_end        DateTime?   @db.Date
  mitra                     mitra?      @relation(fields: [mitra_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_register_mitra_FK")
  program                   program?    @relation(fields: [mitra_reg_program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_register_program_FK")
  referentor                referentor? @relation(fields: [mitra_reg_referentor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_register_referentor_FK")

  @@index([mitra_reg_referentor], map: "mitra_register_referentor_FK")
  @@index([mitra_id], map: "mitra_register_mitra_FK")
  @@index([mitra_reg_program_id], map: "mitra_register_program_FK")
}

model referentor {
  id                   Int                   @id @default(autoincrement())
  referentor_nama      String?               @db.VarChar(255)
  referentor_phone     String?               @db.VarChar(16)
  referentor_email     String?               @db.VarChar(100)
  referentor_isindosat Int?                  @default(0) @db.SmallInt
  isorg                Int?                  @default(0) @db.SmallInt
  activity_additional  activity_additional[]
  mitra_register       mitra_register[]
}

model mitra_approval {
  id       Int       @id @default(autoincrement())
  mitra_id Int?
  user_id  Int?
  date     DateTime? @default(now()) @db.Timestamp(0)
  status   Int?      @default(0) @db.SmallInt
  flag     Int?      @default(0) @db.SmallInt
  amount   Int?      @default(0)
  mitra    mitra?    @relation(fields: [mitra_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_approval_mitra_FK")
  user     user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_approval_user_FK")

  @@index([mitra_id], map: "mitra_approval_mitra_FK")
  @@index([user_id], map: "mitra_approval_user_FK")
}

model mitra_penarikan_dana {
  id           Int       @id @default(autoincrement())
  mitra_id     Int?
  nominal      Int?
  penarikan_ke Int?      @default(1) @db.SmallInt
  datetime     DateTime? @default(now()) @db.Timestamp(0)
  mitra        mitra?    @relation(fields: [mitra_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mitra_penarikan_dana_mitra_FK")

  @@index([mitra_id], map: "mitra_penarikan_dana_mitra_FK")
}

model program_form_activity {
  id                          Int                           @id @default(autoincrement())
  create_date                 DateTime?                     @default(now()) @db.Timestamp(0)
  program_id                  Int?
  program_form                String?                       @db.LongText
  program_form_status         Int?                          @default(1) @db.SmallInt
  program                     program?                      @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "program_form_activity_program_FK")
  program_registered_activity program_registered_activity[]

  @@index([program_id], map: "program_form_activity_program_FK")
}

model program_registered_activity {
  id                                 Int                    @id @default(autoincrement())
  create_date                        DateTime?              @default(now()) @db.Timestamp(0)
  program_registered_value           String?                @db.LongText
  program_form_id                    Int?
  program_id                         Int?
  program_registered_virtual_account String?                @db.VarChar(30)
  program_registered_bank            String?                @db.VarChar(20)
  program                            program?               @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "program_registered_activity_program_FK")
  program_form_activity              program_form_activity? @relation(fields: [program_form_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "program_registered_activity_program_form_activity_FK")

  @@index([program_id], map: "program_registered_activity_program_FK")
  @@index([program_form_id], map: "program_registered_activity_program_form_activity_FK")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model program_transaction_activity {
  id                         Int       @id @default(autoincrement())
  order_id                   String?   @db.VarChar(25)
  datetime                   DateTime? @db.DateTime(0)
  amount                     Int?      @default(0)
  midtrans_status_log        String?   @db.Text
  status_transaction         Int?      @default(0)
  program_id                 Int?
  bank_selected_midtrans     String?   @db.VarChar(25)
  bank_va                    String?   @db.VarChar(25)
  non_bank_account           String?   @db.VarChar(25)
  non_bank_selected_midtrans String?   @db.VarChar(25)
  program                    program?  @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "program_transaction_activity_program_FK")

  @@index([program_id], map: "program_transaction_activity_program_FK")
}

model activity_additional {
  id               Int              @id @default(autoincrement())
  program_id       Int
  nama             String?          @db.VarChar(100)
  no_wa            String?          @db.VarChar(15)
  email            String?          @db.VarChar(150)
  province_id      Int
  city_id          Int
  district_id      Int
  alamat           String?          @db.Text
  kodepos          String?          @db.VarChar(10)
  jumlah_peserta   Int?
  paket_id         Int
  zakat            Int?
  wakaf            Int?
  jasa_kirim       String?          @db.VarChar(100)
  layanan_kirim    String?          @db.VarChar(100)
  etd              String?          @db.VarChar(10)
  ongkir           Int?
  total_biaya      Int?
  excel            String?          @db.Text
  iskomunitas      Int?             @default(0) @db.SmallInt
  nama_komunitas   String?          @db.VarChar(100)
  created_date     DateTime?        @default(now()) @db.Timestamp(0)
  order_id         String?          @db.VarChar(100)
  status_transaksi String?          @db.VarChar(50)
  referentor_id    Int?
  kode_affiliator  Int?
  affiliator_vrfp  affiliator_vrfp? @relation(fields: [kode_affiliator], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_activity_additional_affiliator_vrfp")
  activity_paket   activity_paket   @relation(fields: [paket_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activity_additional_activity_paket_FK")
  program          program          @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "activity_additional_program_FK")
  referentor       referentor?      @relation(fields: [referentor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activity_additional_referentor_FK")
  activity_user    activity_user[]

  @@index([province_id], map: "activity_additional_unique")
  @@index([city_id], map: "activity_additional_unique_1")
  @@index([district_id], map: "activity_additional_unique_2")
  @@index([paket_id], map: "activity_additional_unique_3")
  @@index([program_id], map: "activity_additional_program_FK")
  @@index([referentor_id], map: "activity_additional_referentor_FK")
  @@index([kode_affiliator], map: "Index 8")
}

model activity_paket {
  id                  Int                   @id @default(autoincrement())
  program_id          Int
  kategori            String?               @db.VarChar(100)
  biaya               Int?
  keterangan          String?               @db.Text
  activity_additional activity_additional[]
  program             program               @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "activity_paket_program_FK")
  detail_qurban       detail_qurban[]

  @@index([program_id], map: "activity_paket_unique")
}

model activity_user {
  id                  Int                 @id @default(autoincrement())
  program_id          Int
  additional_id       Int
  nama                String?             @db.VarChar(100)
  no_wa               String?             @db.VarChar(15)
  ukuran              String?             @db.LongText
  gender              String?             @db.VarChar(2)
  no_peserta          String?             @db.VarChar(6)
  activity_additional activity_additional @relation(fields: [additional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activity_user_activity_additional_FK")
  program             program             @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "activity_user_program_FK")

  @@index([program_id], map: "activity_user_unique")
  @@index([additional_id], map: "activity_user_unique_1")
}

model imkas_trans {
  id                Int       @id @default(autoincrement())
  imkas_ref_number  Int?
  imkas_amount      Int       @default(0)
  imkas_datetime    DateTime? @default(now()) @db.Timestamp(0)
  imkas_proposal_id Int?
  imkas_no          String?   @db.VarChar(15)
}

model log_vendor {
  id           Int       @id @default(autoincrement())
  create_date  DateTime? @default(now()) @db.Timestamp(0)
  vendor_api   String?   @db.Text
  url_api      String?   @db.Text
  api_header   String?   @db.LongText
  api_body     String?   @db.Text
  api_response String?   @db.LongText
  payload      String?   @db.Text
}

model activity_qurban {
  id                Int                @id @default(autoincrement())
  nama              String?            @db.VarChar(300)
  no_wa             String?            @db.VarChar(300)
  email             String?            @db.VarChar(300)
  province_id       Int
  city_id           Int
  district_id       Int
  alamat            String?            @db.Text
  program_id        Int
  ukuran            String?            @db.VarChar(300)
  nik               String?            @db.VarChar(100)
  type              Int?               @default(0)
  alokasi_hak       Int?
  total             Int?
  created_date      DateTime?          @default(now()) @db.Timestamp(0)
  lokasi_penyaluran Int?
  gender            String?            @db.VarChar(100)
  ongkir            Int?
  harga             Int?
  UTC               String?            @db.VarChar(100)
  affiliator_id     Int?
  log_aj            log_aj?            @relation(fields: [UTC], references: [uniqueCode], onDelete: NoAction, onUpdate: NoAction, map: "FK_activity_qurban_log_aj")
  lokasi_qurban     lokasi_qurban?     @relation(fields: [lokasi_penyaluran], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_activity_qurban_lokasi_qurban")
  affiliator_qurban affiliator_qurban? @relation(fields: [affiliator_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activity_qurban_affiliator_qurban_FK")
  program           program            @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "activity_qurban_program_FK")
  detail_qurban     detail_qurban[]

  @@index([city_id], map: "activity_qurban_city_id_IDX")
  @@index([district_id], map: "activity_qurban_district_id_IDX")
  @@index([program_id], map: "activity_qurban_program_FK")
  @@index([province_id], map: "activity_qurban_province_id_IDX")
  @@index([UTC], map: "Index 6")
  @@index([lokasi_penyaluran], map: "Index 7")
  @@index([affiliator_id], map: "activity_qurban_affiliator_qurban_FK")
}

model detail_qurban {
  id              Int             @id @default(autoincrement())
  qurban_id       Int
  paket_id        Int?
  qty             String?         @db.VarChar(100)
  total           String?         @db.VarChar(100)
  nama_mudohi     String?         @db.VarChar(300)
  catatan         String?         @db.Text
  activity_paket  activity_paket? @relation(fields: [paket_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "detail_qurban_activity_paket_FK")
  activity_qurban activity_qurban @relation(fields: [qurban_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "detail_qurban_activity_qurban_FK")

  @@index([paket_id], map: "detail_qurban_activity_paket_FK")
  @@index([qurban_id], map: "detail_qurban_activity_qurban_FK")
}

model lokasi_qurban {
  id                   Int               @id @default(autoincrement())
  lokasi_penyembelihan String?           @db.Text
  wilayah              String?           @db.VarChar(250)
  activity_qurban      activity_qurban[]
}

model detail_pemesanan_megakonser {
  id                   Int                  @id @default(autoincrement())
  id_pemesanan         Int
  id_tiket             Int?
  id_detail_tiket      Int?
  kode_tiket           String?              @db.VarChar(50)
  status               Int?                 @default(0)
  pemesanan_megakonser pemesanan_megakonser @relation(fields: [id_pemesanan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__pemesanan_megakonser")
  tiket_konser         tiket_konser?        @relation(fields: [id_tiket], references: [tiket_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_detail_pemesanan_megakonser_tiket_konser")
  tiket_konser_detail  tiket_konser_detail? @relation(fields: [id_detail_tiket], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_detail_pemesanan_megakonser_tiket_konser_detail")

  @@index([id_pemesanan], map: "Index 2")
  @@index([id_tiket], map: "Index 3")
  @@index([id_detail_tiket], map: "Index 4")
}

model pemesanan_megakonser {
  id                          Int                           @id @default(autoincrement())
  nama                        String?                       @db.VarChar(250)
  email                       String?                       @db.VarChar(250)
  telepon                     String?                       @db.VarChar(250)
  gender                      String?                       @db.VarChar(50)
  total_harga                 Int?
  kode_affiliator             String?                       @db.VarChar(10)
  kode_pemesanan              String?                       @unique(map: "Index 2") @db.VarChar(50)
  metode_pembayaran           String?                       @db.VarChar(250)
  bank                        String?                       @db.VarChar(250)
  va_number                   String?                       @db.VarChar(250)
  status                      String?                       @db.VarChar(50)
  transaction_time            DateTime?                     @db.DateTime(0)
  expiry_time                 DateTime?                     @db.DateTime(0)
  infaq                       String?                       @db.VarChar(50)
  detail_pemesanan_megakonser detail_pemesanan_megakonser[]
  affiliator                  affiliator?                   @relation(fields: [kode_affiliator], references: [kode], onDelete: NoAction, onUpdate: NoAction, map: "FK_pemesanan_megakonser_affiliator")

  @@index([kode_affiliator], map: "Index 3")
}

model tiket_konser {
  tiket_id                    Int                           @id @default(autoincrement())
  tiket_nama                  String?                       @db.VarChar(255)
  tiket_program               String?                       @db.VarChar(255)
  tiket_startdate             DateTime?                     @db.Date
  tiket_enddate               DateTime?                     @db.Date
  tiket_harga                 Int?                          @default(0)
  tiket_jumlah                Int?                          @default(0)
  tiket_deskripsi             String?                       @db.Text
  detail_pemesanan_megakonser detail_pemesanan_megakonser[]
  tiket_konser_detail         tiket_konser_detail[]         @relation("TiketKonserToDetail")
}

model cso {
  id         Int        @id @default(autoincrement())
  nama_cso   String?    @db.VarChar(255)
  nohp       String?    @db.VarChar(20)
  alamat     String?    @db.Text
  provinsi   Int?
  kota       Int?
  kecamatan  Int?
  cso_status Int?       @default(0)
  user_id    Int?
  cities     cities?    @relation(fields: [kota], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cso_cities")
  districts  districts? @relation(fields: [kecamatan], references: [dis_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cso_districts")
  provinces  provinces? @relation(fields: [provinsi], references: [prov_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_cso_provinces")
  user       user?      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "cso_user_FK")
  outlet     outlet[]

  @@index([kota], map: "Index 2")
  @@index([kecamatan], map: "Index 3")
  @@index([provinsi], map: "Index 4")
  @@index([user_id], map: "cso_user_FK")
}

model outlet {
  id              Int               @id @default(autoincrement())
  nama_outlet     String?           @db.VarChar(255)
  alamat_outlet   String?           @db.Text
  pic_outlet      String?           @db.VarChar(255)
  telepon         String?           @db.VarChar(100)
  cso_id          Int?
  register_date   DateTime?         @default(now()) @db.Timestamp(0)
  code_outlet     String?           @db.VarChar(25)
  username        String?           @unique(map: "outlet_unique") @db.VarChar(100)
  password        String?           @db.VarChar(100)
  status          Int?              @default(1) @db.SmallInt
  token           String?           @db.Text
  cso             cso?              @relation(fields: [cso_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_outlet_cso")
  register_donasi register_donasi[]

  @@index([cso_id], map: "Index 2")
}

model register_donasi {
  id                 Int       @id @default(autoincrement())
  jenis_donasi       Int?      @default(0)
  nama_donatur       String?   @db.VarChar(255)
  nohp_donatur       String?   @db.VarChar(255)
  nominal            Int?      @default(0)
  id_outlet          Int?
  tanggal_donasi     DateTime? @default(now()) @db.Timestamp(0)
  metode_pembayaran  String?   @db.VarChar(50)
  bank               String?   @db.VarChar(50)
  va_number          String?   @db.VarChar(250)
  biller_code        String?   @db.VarChar(50)
  transaction_status String?   @db.VarChar(50)
  transaction_time   DateTime? @db.DateTime(0)
  settlement_time    DateTime? @db.DateTime(0)
  expiry_time        DateTime? @db.DateTime(0)
  transaction_code   String?   @unique(map: "Index 3") @db.VarChar(50)
  isTest             Int?      @default(0) @db.SmallInt
  outlet             outlet?   @relation(fields: [id_outlet], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_register_donasi_outlet")

  @@index([id_outlet], map: "Index 2")
}

model tiket_konser_detail {
  id                          Int                           @id @default(autoincrement())
  tiket_konser_detail_nama    String?                       @db.VarChar(100)
  tiket_konser_id             Int?
  tiket_konser_detail_desc    String?                       @db.VarChar(255)
  tiket_konser_detail_status  Int?                          @default(0) @db.SmallInt
  detail_pemesanan_megakonser detail_pemesanan_megakonser[]
  tiket_konser                tiket_konser?                 @relation("TiketKonserToDetail", fields: [tiket_konser_id], references: [tiket_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_tiket_konser_detail_tiket_konser")

  @@index([tiket_konser_id], map: "Index 2")
}

model affiliator {
  id                   Int                    @id @default(autoincrement())
  nama                 String?                @db.VarChar(250)
  kode                 String?                @unique(map: "Index 2") @db.VarChar(10)
  pic                  String?                @db.VarChar(250)
  status               Int?                   @default(0)
  pemesanan_megakonser pemesanan_megakonser[]
}

model log_aj {
  id_aj              Int               @id @default(autoincrement())
  timestampt         String?           @db.VarChar(300)
  merchantId         String?           @db.VarChar(300)
  respCode           String?           @db.VarChar(300)
  ammount            String?           @db.VarChar(300)
  uniqueCode         String?           @unique(map: "Index 2") @db.VarChar(300)
  transRef           String?           @db.VarChar(300)
  date_time          String?           @db.VarChar(300)
  status             String?           @db.VarChar(300)
  fail_resson        String?           @db.VarChar(300)
  trx_type           String?           @db.VarChar(300)
  status_notify_sof  String?           @db.VarChar(300)
  status_transaction String?           @db.VarChar(300)
  activity_qurban    activity_qurban[]
}

model report {
  id                                       Int         @id @default(autoincrement())
  report_type                              Int         @default(0) @db.SmallInt
  report_gl_account                        Int?
  report_proposal_id                       Int?
  report_nominal                           Int?        @default(0)
  report_description                       String?     @db.Text
  report_isdebit                           Int?        @default(0) @db.SmallInt
  report_date                              DateTime?   @db.Date
  report_mutasi_id                         Int?
  report_penyaluran_rek_tujuan             String?     @db.VarChar(50)
  report_penyaluran_rek_nama               String?     @db.VarChar(100)
  report_penyaluran_bank_account_ziswaf_id Int?
  report_penerimaan_rek_asal               String?     @db.VarChar(50)
  report_penerimaan_rek_nama               String?     @db.VarChar(100)
  report_penerimaan_bank_account_ziswaf_id Int?
  gl_account                               gl_account? @relation(fields: [report_gl_account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "report_gl_account_FK")

  @@index([report_gl_account], map: "report_gl_account_FK")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mutasi {
  id                       Int       @id @default(autoincrement())
  mutasi_tanggal_transaksi DateTime? @db.DateTime(0)
  mutasi_bank_code         String?   @db.VarChar(100)
  mutasi_deskripsi         String?   @db.Text
  mutasi_currency          String?   @db.VarChar(5)
  mutasi_amount            Int?
  mutasi_isdebit           String?   @db.VarChar(5)
  mutasi_iscredit          String?   @db.VarChar(5)
  mutasi_balance           Int?
  mutasi_bank_account_id   Int?
}

model mutasi_file {
  id                          Int           @id @default(autoincrement())
  mutasi_file_name            String?       @db.Text
  mutasi_file_bank_account_id Int?
  mutasi_file_bulan           Int?
  mutasi_file_isgenerated     Int?          @default(0) @db.SmallInt
  bank_account                bank_account? @relation(fields: [mutasi_file_bank_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mutasi_file_bank_account_FK")

  @@index([mutasi_file_bank_account_id], map: "mutasi_file_bank_account_FK")
}

model jurnal_lk {
  id                Int               @id @default(autoincrement())
  jurnal_tanggal    DateTime?         @db.Date
  jurnal_deskripsi  String?           @db.Text
  jurnal_isdebit    Int?              @default(0) @db.SmallInt
  jurnal_gl_account Int?
  jurnal_nominal    Int?
  jurnal_status     Int?              @default(1) @db.SmallInt
  jurnal_kategori   Int?
  jurnal_head_id    Int?
  com_code          String?           @db.VarChar(50)
  gl_account        gl_account?       @relation(fields: [jurnal_gl_account], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "jurnal_lk_gl_account_FK")
  jurnal_category   jurnal_category?  @relation(fields: [jurnal_kategori], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "jurnal_lk_jurnal_category_FK")
  jurnal_lk_header  jurnal_lk_header? @relation(fields: [jurnal_head_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "jurnal_lk_jurnal_lk_header_FK")

  @@index([jurnal_gl_account], map: "jurnal_lk_gl_account_FK")
  @@index([jurnal_kategori], map: "jurnal_lk_jurnal_category_FK")
  @@index([jurnal_head_id], map: "jurnal_lk_jurnal_lk_header_FK")
}

model jurnal_lk_header {
  id            Int            @id @default(autoincrement())
  doc_number    String?        @db.VarChar(100)
  create_date   DateTime?      @default(now()) @db.Timestamp(0)
  period        Int?           @default(2024)
  currency      String?        @db.VarChar(5)
  doc_type      Int?
  iswakaf       Int?           @default(0) @db.SmallInt
  description   String?        @db.Text
  istransformed Int?           @default(0) @db.SmallInt
  com_code      String?        @db.VarChar(50)
  jurnal_lk     jurnal_lk[]
  document_type document_type? @relation(fields: [doc_type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "jurnal_lk_header_document_type_FK")

  @@index([doc_type], map: "jurnal_lk_header_document_type_FK")
}

model period {
  id          Int       @id @default(autoincrement())
  comCode     String?   @db.VarChar(50)
  from_period String?   @db.VarChar(50)
  from_year   Int?      @db.Year
  to_period   String?   @db.VarChar(50)
  to_year     Int?      @db.Year
  aenam       Int?
  aedat       DateTime? @db.Date
  aetim       DateTime? @db.Time(0)
}

model posting {
  id                Int         @id @default(autoincrement())
  account           String?     @db.VarChar(50)
  gla_id            Int?
  year              Int?        @db.Year
  period            String?     @db.VarChar(50)
  currency          String?     @db.VarChar(50)
  beginning_balance Int         @default(0)
  total_transaction Int         @default(0)
  ending_balance    Int         @default(0)
  last_change       DateTime    @default(now()) @db.DateTime(0)
  changes_by        Int         @default(0)
  gl_account        gl_account? @relation(fields: [gla_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_posting_gl_account")

  @@index([gla_id], map: "Index 2")
}

model pemberi_rekomendasi {
  id      Int     @id @default(autoincrement())
  nama    String? @db.VarChar(255)
  email   String? @db.VarChar(255)
  telepon String? @db.VarChar(15)
}

model affiliator_qurban {
  id              Int               @id @default(autoincrement())
  nama            String            @db.VarChar(100)
  no_hp           String?           @db.VarChar(100)
  kode_affiliator String?           @db.VarChar(100)
  activity_qurban activity_qurban[]
}

model affiliator_vrfp {
  id                  Int                   @id @default(autoincrement())
  nama                String                @db.VarChar(100)
  no_hp               String?               @db.VarChar(100)
  kode_affiliator     String?               @db.VarChar(100)
  activity_additional activity_additional[]
}

model disbursement {
  id                          BigInt             @id @default(autoincrement())
  proposal_id                 Int?
  type                        disbursement_type?
  stan                        String?            @db.VarChar(20)
  ref_number                  String?            @db.VarChar(50)
  trans_datetime              String?            @db.VarChar(14)
  inst_id                     String?            @db.VarChar(10)
  token_id                    String?            @db.VarChar(50)
  sender_account_id           String?            @db.VarChar(50)
  sender_name                 String?            @db.VarChar(100)
  sender_curr_code            String?            @db.VarChar(10)
  sender_amount               String?            @db.VarChar(50)
  sender_rate                 String?            @db.VarChar(50)
  sender_area_code            String?            @db.VarChar(10)
  beneficiary_purpose_code    String?            @db.VarChar(10)
  beneficiary_purpose_desc    String?            @db.VarChar(100)
  beneficiary_inst_id         String?            @db.VarChar(10)
  beneficiary_account_id      String?            @db.VarChar(50)
  beneficiary_curr_code       String?            @db.VarChar(10)
  beneficiary_amount          String?            @db.VarChar(50)
  beneficiary_cust_ref_number String?            @db.VarChar(50)
  beneficiary_name            String?            @db.VarChar(100)
  beneficiary_regency_code    String?            @db.VarChar(10)
  response_code               String?            @db.VarChar(10)
  response_description        String?            @db.VarChar(100)
  signature_data              String?            @db.Text
  account_balance             String?            @db.VarChar(50)
  topup_balance               String?            @db.VarChar(50)
  created_at                  DateTime?          @db.DateTime(0)
  proposal                    proposal?          @relation(fields: [proposal_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_disbursement_proposal")

  @@index([proposal_id], map: "Index 2")
}

model area {
  area_id   Int     @id @default(autoincrement())
  area_name String? @db.VarChar(250)
}

model disbursement_cron_log {
  id                   BigInt    @id @default(autoincrement())
  proposal_id          Int
  ref_number           String?   @db.VarChar(50)
  query_stan           String?   @db.VarChar(20)
  query_trans_datetime String?   @db.VarChar(40)
  nama                 String?   @db.VarChar(255)
  status               String?   @default("waiting") @db.VarChar(10)
  created_at           DateTime? @default(now()) @db.DateTime(0)
  updated_at           DateTime? @default(now()) @db.DateTime(0)
}

model bank_backup {
  id        Int     @id @default(autoincrement())
  bank_name String? @db.VarChar(100)
  bank_code String? @db.VarChar(50)
  isactive  Int?    @default(1)
}

enum disbursement_type {
  inquiry
  transfer
  status
  checkBalance
  topUp
}
