generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://userziswaf:Zis321@@@149.129.225.79:234/ziswafApp?connect_timeout=300"
}

model banners {
  banners_id         Int      @id @default(autoincrement())
  banners_name       String?  @db.VarChar(255)
  banners_path       String?  @db.Text
  banners_program_id Int?
  program            program?
}

model customers {
  customer_id       Int     @id @default(autoincrement())
  customer_user_id  Int
  customer_no_imkas String? @db.VarChar(15)
  customer_durasi   Int?
  customer_reminder Int?    @db.SmallInt
  customer_status   Int?    @default(1) @db.SmallInt
}

model institusi {
  institusi_id      Int       @id @default(autoincrement())
  institusi_nama    String    @db.VarChar(255)
  institusi_user_id Int?
  institusi_no_hp   String?   @db.VarChar(15)
  institusi_status  Int?      @default(1) @db.SmallInt
  user              user?     @relation(fields: [institusi_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "institusi_FK")
  program           program[]

  @@index([institusi_user_id], map: "institusi_FK")
}

model program {
  program_id            Int                     @id @default(autoincrement())
  program_kode          String?                 @db.VarChar(10)
  program_title         String                  @db.VarChar(100)
  program_short_desc    String?                 @db.Text
  program_start_date    DateTime?               @db.DateTime(0)
  program_end_date      DateTime?               @db.DateTime(0)
  program_description   String?                 @db.Text
  program_institusi_id  Int?
  program_target_amount BigInt
  program_create        DateTime?               @default(now()) @db.Timestamp(0)
  program_status        Int?                    @default(1) @db.SmallInt
  program_isheadline    Int?                    @default(0) @db.SmallInt
  program_banner_id     Int                     @unique
  user_id               Int
  program_category_id   Int?
  beneficiary_id        Int?
  notification          notification[]
  beneficiary           beneficiary?            @relation(fields: [beneficiary_id], references: [id])
  program_banner        banners                 @relation(fields: [program_banner_id], references: [banners_id])
  program_category      program_category?       @relation(fields: [program_category_id], references: [id])
  program_institusi     institusi?              @relation(fields: [program_institusi_id], references: [institusi_id])
  proposal              proposal[]
  recurring_transaction recurring_transaction[]
  transactions          transactions[]

  @@index([program_institusi_id], map: "program_program_institusi_id_fkey")
  @@index([beneficiary_id], map: "program_beneficiary_id_fkey")
  @@index([program_category_id], map: "program_program_category_id_fkey")
  @@index([user_id], map: "program_user_id_fkey")
}

model program_category {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  desc       String?     @db.Text
  gl_id      Int?
  program    program[]
  gl_account gl_account? @relation(fields: [gl_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "program_category_gl_FK")

  @@index([gl_id], map: "program_category_gl_FK")
}

model user {
  user_id               Int                     @id @default(autoincrement())
  username              String                  @unique(map: "user_UN") @db.VarChar(255)
  user_password         String                  @db.VarChar(255)
  user_nama             String?                 @db.VarChar(100)
  user_phone            String?                 @unique(map: "user_UN_2") @db.VarChar(100)
  user_type             Int?                    @default(0)
  user_status           Int?                    @default(0) @db.SmallInt
  user_token            String?                 @db.Text
  user_reg_date         DateTime                @default(now()) @db.Timestamp(0)
  mustahiq_id           Int?                    @unique
  beneficiary           beneficiary[]
  document_type         document_type[]
  ebs_validation        ebs_validation[]
  institusi             institusi[]
  notifications         notification[]
  pettycash             pettycash[]
  pettycash_request     pettycash_request[]
  proposal              proposal[]
  proposal_approval     proposal_approval[]
  recurring_transaction recurring_transaction[]
  transactions          transactions[]
  mustahiq              mustahiq?               @relation(fields: [mustahiq_id], references: [id], onUpdate: NoAction)
  type                  UserType?               @relation(fields: [user_type], references: [user_type_id], onUpdate: NoAction)

  @@index([user_type], map: "user_user_type_fkey")
}

model notification {
  id             Int           @id @default(autoincrement())
  title          String        @db.VarChar(255)
  description    String        @db.Text
  type           String        @db.VarChar(255)
  created_at     DateTime      @default(now()) @db.Timestamp(0)
  program_id     Int?
  transaction_id Int?
  user_id        Int
  program        program?      @relation(fields: [program_id], references: [program_id])
  transaction    transactions? @relation(fields: [transaction_id], references: [id])
  user           user          @relation(fields: [user_id], references: [user_id])

  @@index([program_id], map: "notification_program_id_fkey")
  @@index([transaction_id], map: "notification_transaction_id_fkey")
  @@index([user_id], map: "notification_user_id_fkey")
}

model mustahiq {
  id                       Int     @id @default(autoincrement())
  address                  String  @db.Text
  province                 String? @db.VarChar(100)
  kota                     String? @db.VarChar(100)
  kecamatan                String? @db.VarChar(100)
  ktp_url                  String  @db.VarChar(255)
  kk_url                   String  @db.VarChar(255)
  emergency_contact_name   String  @db.VarChar(255)
  emergency_contact_number String  @db.VarChar(15)
  bank_name                String  @db.VarChar(255)
  bank_number              String  @db.VarChar(255)
  imkas_number             String? @db.VarChar(255)
  bank_account_name        String  @db.VarChar(255)
  user                     user?
}

model beneficiary {
  id                       Int       @id @default(autoincrement())
  address                  String    @db.Text
  ktp_url                  String    @db.VarChar(255)
  kk_url                   String    @db.VarChar(255)
  emergency_contact_name   String    @db.VarChar(255)
  emergency_contact_number String    @db.VarChar(15)
  bank_name                String    @db.VarChar(255)
  bank_number              String    @db.VarChar(255)
  imkas_number             String?   @db.VarChar(255)
  bank_account_name        String    @db.VarChar(255)
  user_id                  Int?
  user                     user?     @relation(fields: [user_id], references: [user_id])
  program                  program[]

  @@index([user_id], map: "beneficiary_user_id_fkey")
}

model password_token {
  id      Int    @id @default(autoincrement())
  user_id Int    @unique
  token   String @db.VarChar(255)
}

model UserType {
  user_type_id   Int    @id @default(autoincrement())
  user_type_name String @db.VarChar(100)
  user           user[]

  @@map("user_type")
}

model vendor {
  vendor_id            Int     @id @default(autoincrement())
  vendor_user_id       Int
  vendor_address       String? @db.Text
  vendor_ktp           String? @db.VarChar(255)
  vendor_kk            String? @db.VarChar(255)
  vendor_kontak_name   String? @db.VarChar(255)
  vendor_kontak_number String? @db.VarChar(15)
  vendor_bank_name     String? @db.VarChar(255)
  vendor_bank_number   Int?
  vendor_bank_id       Int?
}

model test_table {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model transactions {
  id             Int            @id @default(autoincrement())
  program_id     Int
  user_id        Int
  amount         Int            @db.MediumInt
  payment_method String         @db.VarChar(100)
  evidence       String         @db.Text
  status         String         @default("pending") @db.VarChar(100)
  notification   notification[]
  program        program        @relation(fields: [program_id], references: [program_id])
  user           user           @relation(fields: [user_id], references: [user_id])

  @@index([program_id], map: "transactions_program_id_fkey")
  @@index([user_id], map: "transactions_user_id_fkey")
}

model bank_account {
  id          Int       @id @default(autoincrement())
  bank_name   String    @db.VarChar(255)
  bank_number String    @db.VarChar(255)
  mt_file     mt_file[]
}

model ebs_staging {
  id             Int              @id @default(autoincrement())
  account_number String?          @db.VarChar(50)
  trans_ref      String?          @db.VarChar(50)
  bank_date      String?          @db.VarChar(50)
  state_num      String?          @db.VarChar(25)
  currency       String?          @db.VarChar(3)
  ob_amount      String?          @db.VarChar(200)
  ob_ind         String?          @db.VarChar(50)
  eb_amount      String?          @db.VarChar(200)
  eb_ind         String?          @db.VarChar(50)
  trans_date     String?          @db.VarChar(50)
  trans_type     String?          @db.VarChar(27)
  trans_amount   String?          @db.VarChar(27)
  trans_id       String?          @db.VarChar(27)
  text_info      String?          @db.VarChar(200)
  ebs_info1      String?          @db.VarChar(50)
  ebs_info2      String?          @db.VarChar(50)
  ebs_info3      String?          @db.VarChar(50)
  ebs_filename   String?          @db.VarChar(255)
  mt_file_id     Int?
  mt_file        mt_file?         @relation(fields: [mt_file_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ebs_staging_FK")
  ebs_validation ebs_validation[]

  @@index([account_number], map: "ebs_staging_account_number_fkey")
  @@index([mt_file_id], map: "ebs_staging_FK")
}

model tccode {
  id     Int      @id @default(autoincrement())
  ccode  String   @unique
  cname  String
  cncode String
  athead athead[]
}

model athead {
  id     Int     @id @default(autoincrement())
  ccode  String
  fyear  String
  docnr  String
  atgla  atgla[]
  tccode tccode  @relation(fields: [ccode], references: [ccode])

  @@unique([ccode, fyear, docnr])
}

model atgla {
  id     Int    @id @default(autoincrement())
  ccode  String
  fyear  String
  docnr  String
  clrdt  String
  docit  String
  posdt  String
  docdt  String
  dtype  String
  athead athead @relation(fields: [ccode, fyear, docnr], references: [ccode, fyear, docnr])

  @@index([ccode, fyear, docnr], map: "atgla_ccode_fyear_docnr_fkey")
}

model recurring_transaction {
  id               Int      @id @default(autoincrement())
  program_id       Int?
  user_id          Int?
  amount           Int?
  payment_method   String?  @db.VarChar(100)
  recurring_status Int?     @default(0) @db.SmallInt
  recurring_type   Int?     @default(0) @db.SmallInt
  reminder_type    Int?     @default(0) @db.SmallInt
  program          program? @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "recurring_transaction_program_id_FK")
  user             user?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "recurring_transaction_user_id_FK")

  @@index([program_id], map: "recurring_transaction_program_id_FK")
  @@index([user_id], map: "recurring_transaction_user_id_FK")
}

model document_type {
  id           Int      @id @default(autoincrement())
  indicator    String?
  account_type String?
  user_id      Int
  created_at   DateTime @default(now()) @db.Timestamp(0)
  description1 String?
  description2 String?
  description3 String?
  posting_key  String?
  user         user     @relation(fields: [user_id], references: [user_id])

  @@index([user_id], map: "document_type_user_id_fkey")
}

model gl_account {
  id               Int                @id @default(autoincrement())
  gl_account       String?
  gl_name          String?
  gl_type          Int?
  gl_group         String?
  description      String?
  coa              String?
  status           String?
  ebs_validation   ebs_validation[]
  gl_account_type  gl_account_type?   @relation(fields: [gl_type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gl_account_type_FK")
  program_category program_category[]

  @@index([gl_type], map: "gl_account_type_FK")
}

model gl_account_type {
  id         Int          @id @default(autoincrement())
  gla_type   String?      @db.VarChar(100)
  gl_account gl_account[]
}

model pettycash {
  id         Int       @id @default(autoincrement())
  amount     Int?      @default(0)
  updatetime DateTime? @db.DateTime(0)
  user_id    Int
  user       user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "pettycash_FK")

  @@index([user_id], map: "pettycash_FK")
}

model pettycash_request {
  id           Int       @id @default(autoincrement())
  amount       Int?      @default(0)
  user_id      Int
  request_date DateTime? @default(now()) @db.Timestamp(0)
  status       Int?      @default(0) @db.SmallInt
  deskripsi    String?   @db.Text
  user         user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "pettycash_request_FK")

  @@index([user_id], map: "pettycash_request_FK")
}

model provinces {
  prov_id         Int      @id @default(autoincrement())
  prov_name       String?  @db.VarChar(255)
  locationid      Int?
  status          Int?     @default(1)
  province_by_dpt Int?     @default(0)
  cities          cities[]
}

model cities {
  city_id   Int         @id @default(autoincrement())
  city_name String?     @db.VarChar(255)
  prov_id   Int?
  provinces provinces?  @relation(fields: [prov_id], references: [prov_id], onDelete: NoAction, onUpdate: NoAction, map: "cities_FK")
  districts districts[]

  @@index([prov_id], map: "cities_FK")
}

model districts {
  dis_id   Int     @id @default(autoincrement())
  dis_name String? @db.VarChar(255)
  city_id  Int?
  ket      String? @db.VarChar(100)
  cities   cities? @relation(fields: [city_id], references: [city_id], onDelete: NoAction, onUpdate: NoAction, map: "districts_FK")

  @@index([city_id], map: "districts_FK")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model proposal {
  id                          Int                 @id @default(autoincrement())
  user_id                     Int?
  program_id                  Int?
  nama                        String?             @db.VarChar(100)
  tempat_lahir                String?             @db.VarChar(100)
  tgl_lahir                   String?             @db.VarChar(15)
  jenis_kelamin               Int?                @default(0) @db.SmallInt
  alamat_rumah                String?             @db.VarChar(255)
  kode_pos                    String?             @db.VarChar(6)
  status_rumah                Int?                @default(0) @db.SmallInt
  status_pernikahan           Int?                @default(0) @db.SmallInt
  jumlah_anak                 Int?                @default(0) @db.SmallInt
  penghasilan_bulanan         Int?
  nama_pasangan               String?             @db.VarChar(100)
  pekerjaan                   String?             @db.VarChar(100)
  pendidikan_terakhir         Int?                @default(0) @db.SmallInt
  nama_sekolah_universitas    String?             @db.VarChar(100)
  fakultas                    String?             @db.VarChar(100)
  jurusan                     String?             @db.VarChar(100)
  tempat_mengajar             String?             @db.VarChar(255)
  alamat_mengajar             String?             @db.VarChar(255)
  nomor_telp_sekolah_kampus   String?             @db.VarChar(15)
  sebagai_guru                String?             @db.VarChar(100)
  bantuan_pihak_lain          String?             @db.VarChar(255)
  nominal_bantuan             Int?
  nama_pemberi_rekomendasi    String?             @db.VarChar(100)
  alamat_pemberi_rekomendasi  String?             @db.VarChar(255)
  no_telp_pemberi_rekomendasi String?             @db.VarChar(15)
  proposal_kategori           Int?                @default(0) @db.SmallInt
  status_domisili             Int?                @default(0) @db.SmallInt
  kelas_semester_saat_ini     String?             @db.VarChar(100)
  alamat_sekolah_kampus       String?             @db.VarChar(100)
  biaya_pendidikan_bulanan    Int?
  organisasi_yang_diikuti     String?             @db.VarChar(255)
  nama_ayah                   String?             @db.VarChar(100)
  pekerjaan_ayah              String?             @db.VarChar(100)
  penghasilan_bulanan_ayah    Int?
  nama_ibu                    String?             @db.VarChar(100)
  pekerjaan_ibu               String?             @db.VarChar(100)
  penghasilan_bulanan_ibu     Int?
  biaya_hidup_bulanan         Int?
  jumlah_tanggungan           Int?                @default(0) @db.SmallInt
  jenis_bantuan_kesehatan     String?             @default("0") @db.VarChar(255)
  create_date                 DateTime?           @default(now()) @db.Timestamp(0)
  status_approval             Int?                @default(0) @db.SmallInt
  tanggal_approval            DateTime?           @db.DateTime(0)
  user_approver_id            Int?
  status_approval2            Int?                @default(0) @db.SmallInt
  tanggal_approval2           DateTime?           @db.DateTime(0)
  status_perintah_bayar       Int?                @default(0) @db.SmallInt
  status_approval3            Int?                @default(0) @db.SmallInt
  tanggal_approval3           DateTime?           @db.DateTime(0)
  user_approver_id3           Int?
  status_bayar                Int?                @default(0) @db.SmallInt
  dana_yang_diajukan          Int?                @default(0)
  user_approver_id2           Int?
  status_all                  Int?                @default(0) @db.SmallInt
  dana_yang_disetujui         Int?
  user                        user?               @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "proposal_FK")
  program                     program?            @relation(fields: [program_id], references: [program_id], onDelete: NoAction, onUpdate: NoAction, map: "proposal_FK_1")
  proposal_approval           proposal_approval[]

  @@index([user_id], map: "proposal_FK")
  @@index([program_id], map: "proposal_FK_1")
}

model mt_file {
  id           Int           @id @default(autoincrement())
  filename     String?       @db.VarChar(255)
  path         String?       @db.Text
  date         DateTime?     @default(now()) @db.Timestamp(0)
  bank         Int?
  no_rekening  String?       @db.VarChar(25)
  user_id      Int?
  ebs_staging  ebs_staging[]
  bank_account bank_account? @relation(fields: [bank], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mt_file_FK")

  @@index([bank], map: "mt_file_FK")
}

model proposal_approval {
  id          Int       @id @default(autoincrement())
  proposal_id Int?
  user_id     Int?
  date        DateTime? @default(now()) @db.Timestamp(0)
  status      Int?      @default(0) @db.SmallInt
  flag        Int?      @default(0) @db.SmallInt
  proposal    proposal? @relation(fields: [proposal_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "proposal_approval_FK")
  user        user?     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@index([proposal_id], map: "proposal_approval_FK")
  @@index([user_id], map: "proposal_approval_user_id_fkey")
}

model ebs_validation {
  id             Int          @id @default(autoincrement())
  ebs_id         Int?
  gl_id          Int?
  user_id        Int?
  tgl_validation DateTime?    @default(now()) @db.Timestamp(0)
  gl_account     gl_account?  @relation(fields: [gl_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ebs_validation_FK")
  user           user?        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "ebs_validation_FK_1")
  ebs_staging    ebs_staging? @relation(fields: [ebs_id], references: [id], onUpdate: SetNull, map: "ebs_validation_FK_2")

  @@index([gl_id], map: "ebs_validation_FK")
  @@index([user_id], map: "ebs_validation_FK_1")
  @@index([ebs_id], map: "ebs_validation_FK_2")
}
